#!/usr/bin/env python
# -*- coding: utf-8 -*-


import rospy

from jonas_functions import *
from std_msgs.msg import Int16MultiArray

#Porcentaje de velocidad
speed = 40
vxy = 0
vx = 0
vy  = 0
w = 0

def callback_base(data):
	if data.data[0] == 1:
		vx = (data.data[1]/100.0)*vx_max
		vy = 0
		w = 0
	
	if data.data[0] == 2:
		vx = -(data.data[1]/100.0)*vx_max
		vy = 0
		w = 0

	if data.data[0] == 3:
		vx = 0
		vy = (data.data[1]/100.0)*vy_max
		w = 0

	if data.data[0] == 4:
		vx = 0
		vy = -(data.data[1]/100.0)*vy_max
		w = 0 	
	
	if data.data[0] == 5:
		vx = (data.data[1]/100.0)*vxy_max
		vy = -(data.data[1]/100.0)*vxy_max
		w = 0
	
	if data.data[0] == 6: 
		vx = -(data.data[1]/100.0)*vxy_max
		vy = -(data.data[1]/100.0)*vxy_max
		w = 0

	if data.data[0] == 7: 
		vx = -(data.data[1]/100.0)*vxy_max
		vy = (data.data[1]/100.0)*vxy_max
		w = 0

	if data.data[0] == 8: 
		vx = (data.data[1]/100.0)*vxy_max
		vy = (data.data[1]/100.0)*vxy_max
		w = 0

	print(vx)
	print(vy)
	print(w)
	send_vel_robot(vx,vy,w)


if __name__ == '__main__':

	# Inicializar nodo
	rospy.init_node("jonas_control")

	sub_base = rospy.Subscriber('mov_coms_topic',Int16MultiArray,callback_base)



	freq = 100 #Frecuencia del envio (en Hz)
	dt = 1.0/freq #Delta de tiempo
	rate = rospy.Rate(freq)

	while not rospy.is_shutdown():
	
	#Velocidades del robot
	# vx =  (speed/100)*vxy_max
	# vy = (speed/100)*vxy_max
	# w = (speed/100)*w_max
	
	#Enviar velocidades
	# send_vel_robot(vx,vy,w)
	
		rate.sleep()
